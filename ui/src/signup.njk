---
layout: base.njk
title: Create Your Account
---

<section class="hero-gradient text-white py-12">
    <div class="max-w-7xl mx-auto px-4 text-center">
        <h1 class="text-3xl md:text-4xl font-bold mb-4">Create Your Account</h1>
        <p class="text-lg opacity-90">Start optimizing your resume for ATS today</p>
    </div>
</section>

<section class="py-16 px-4">
    <div class="max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden p-8">
        <form id="signup-form" class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label for="first-name" class="block text-sm font-medium text-gray-700 mb-1">First Name</label>
                    <input type="text" id="first-name" name="first_name" required
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                </div>
                <div>
                    <label for="last-name" class="block text-sm font-medium text-gray-700 mb-1">Last Name</label>
                    <input type="text" id="last-name" name="last_name" required
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                </div>
            </div>

            <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
                <input type="email" id="email" name="email" required
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                <p id="email-error" class="mt-1 text-sm text-red-600 hidden">Please enter a valid email address</p>
            </div>

            <div>
                <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                <input type="tel" id="phone" name="phone"
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
            </div>

            <div>
                <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                <div class="relative">
                    <input type="password" id="password" name="password" required minlength="8"
                        class="w-full px-4 py-2 pr-10 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                    <button type="button" class="absolute inset-y-0 right-0 flex items-center pr-3 text-gray-500 hover:text-gray-700 focus:outline-none" data-password-toggle="password">
                        <!-- Eye icon for hidden password -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 eye-icon" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                            <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                        </svg>
                        <!-- Eye slash icon for visible password (hidden by default) -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 eye-slash-icon hidden" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z" clip-rule="evenodd" />
                            <path d="M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z" />
                        </svg>
                    </button>
                </div>
                <ul id="password-rules" class="mt-2 text-xs text-gray-500">
                    <li class="password-rule" data-rule="length">• At least 8 characters</li>
                    <li class="password-rule" data-rule="uppercase">• At least 1 uppercase letter</li>
                    <li class="password-rule" data-rule="lowercase">• At least 1 lowercase letter</li>
                    <li class="password-rule" data-rule="number">• At least 1 number</li>
                </ul>
            </div>

            <div>
                <label for="confirm-password" class="block text-sm font-medium text-gray-700 mb-1">Confirm Password</label>
                <input type="password" id="confirm-password" required
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                <p id="password-match-error" class="mt-1 text-sm text-red-600 hidden">Passwords do not match</p>
            </div>
            <!-- for 'how you heard about us' field -->
            <div>
                <label for="how-you-heard" class="block text-sm font-medium text-gray-700 mb-1">How did you hear about us? (optional)</label>
                <select id="how-you-heard" name="how_heard"
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                    <option value="">Select an option</option>
                    <option value="Referral">Someone Told You</option>
                    <option value="Social Media">Social Media</option>
                    <option value="Organic">Search Engine</option>
                    <option value="Paid Ad">Advertisement</option>
                    <option value="Email">Email</option>
                    <option value="Other">Other</option>
                </select>
            </div>

            <div class="flex items-center">
                <input type="checkbox" id="terms" name="terms" required
                    class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                <label for="terms" class="ml-2 block text-sm text-gray-700">
                    I agree to the <a href="/tos" class="text-blue-600 hover:text-blue-800">Terms of Service</a> and <a href="/privacy" class="text-blue-600 hover:text-blue-800">Privacy Policy</a>
                </label>
            </div>

            <div id="form-error" class="hidden py-3 px-4 bg-red-50 text-red-600 rounded-md text-sm"></div>

            <button type="submit" id="submit-btn"
                class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                <span id="btn-text">Create Account</span>
                <span id="spinner" class="spinner hidden ml-2"></span>
            </button>

            <div class="text-center text-sm text-gray-500">
                Already have an account? <a href="/login" class="text-blue-600 hover:text-blue-800">Log in</a>
            </div>
        </form>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('signup-form');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirm-password');
    const submitBtn = document.getElementById('submit-btn');
    const btnText = document.getElementById('btn-text');
    const spinner = document.getElementById('spinner');
    const formError = document.getElementById('form-error');
    
    // Password validation rules
    const passwordRules = {
        length: value => value.length >= 8,
        uppercase: value => /[A-Z]/.test(value),
        number: value => /[0-9]/.test(value),
        lowercase: value => /[a-z]/.test(value)
    };

    // Validate password in real-time
    passwordInput.addEventListener('input', () => {
        const value = passwordInput.value;
        Object.keys(passwordRules).forEach(rule => {
            const element = document.querySelector(`.password-rule[data-rule="${rule}"]`);
            if (passwordRules[rule](value)) {
                element.classList.add('text-green-500');
                element.classList.remove('text-gray-500');
            } else {
                element.classList.remove('text-green-500');
                element.classList.add('text-gray-500');
            }
        });
    });

    // Confirm password match
    confirmPasswordInput.addEventListener('input', () => {
        const errorElement = document.getElementById('password-match-error');
        if (passwordInput.value !== confirmPasswordInput.value) {
            errorElement.classList.remove('hidden');
            return false;
        } else {
            errorElement.classList.add('hidden');
            return true;
        }
    });

    // Email validation
    emailInput.addEventListener('blur', () => {
        const errorElement = document.getElementById('email-error');
        if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(emailInput.value)) {
            errorElement.classList.remove('hidden');
            return false;
        } else {
            errorElement.classList.add('hidden');
            return true;
        }
    });

    // Form submission
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Validate form
        if (passwordInput.value !== confirmPasswordInput.value) {
            showError('Passwords do not match');
            return;
        }

        if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(emailInput.value)) {
            showError('Please enter a valid email address');
            return;
        }

        // Prepare data
        const formData = {
            email: emailInput.value,
            password: passwordInput.value,
            first_name: document.getElementById('first-name').value,
            last_name: document.getElementById('last-name').value,
            phone: document.getElementById('phone').value,
            how_you_heard: document.getElementById('how-you-heard').value,
        };

        // Show loading state
        submitBtn.disabled = true;
        btnText.textContent = 'Creating Account...';
        spinner.classList.remove('hidden');
        formError.classList.add('hidden');

        try {
            // Use AuthService
            const response = await AuthService.signup(formData);
            
            if (!response.ok) throw new Error(response.statusText);
            const data = await response.json();
            if (data.status !== 1) throw new Error(data.message);

            // Store user data
            API.login(data);
            
            // Redirect to dashboard
            window.location.href = '/dashboard';
        } catch (error) {
            showError(error.message);
        } finally {
            // Reset button state
            submitBtn.disabled = false;
            btnText.textContent = 'Create Account';
            spinner.classList.add('hidden');
        }
    });

    function showError(message) {
        formError.textContent = message;
        formError.classList.remove('hidden');
        window.scrollTo({
            top: formError.offsetTop - 20,
            behavior: 'smooth'
        });
    }
});
</script>
